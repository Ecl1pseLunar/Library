local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = "üéÑ Library v0.6 üéÑ",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "SaveConfig"
})

local Game = Window:MakeTab({
    Name = "Game",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Event = Window:MakeTab({
    Name = "Event",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Function = Window:MakeTab({
    Name = "Fun√ß√µes",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Section = Event:AddSection({
    Name = "Event:"
})

Event:AddLabel("Evento natalino üéÑ")

local coletaAtiva = false  -- Vari√°vel que controla o estado da coleta

-- Evento para alternar a coleta autom√°tica de presentes
Event:AddToggle({
    Name = "Coleta autom√°tica de presentes üéÅ",
    Default = false,
    Callback = function(Value)
        coletaAtiva = Value
        if not coletaAtiva then
            print("Coleta desativada")
        else
            print("Coleta ativada")
        end
    end    
})

-- Loop para coletar presentes automaticamente, ativado/desativado pelo toggle
spawn(function()
    while wait(1) do
        if coletaAtiva then
            for _, model in pairs(game:GetService("Workspace"):WaitForChild("GameplayAssets"):GetChildren()) do
                if model.Name == "ChristmasEvent" then
                    for _, child in pairs(model:GetChildren()) do
                        local objetoComTouch = child:FindFirstChildWhichIsA("BasePart")
                        if objetoComTouch and objetoComTouch:FindFirstChild("TouchInterest") then
                            firetouchinterest(objetoComTouch, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, 0)
                            firetouchinterest(objetoComTouch, game:GetService("Players").LocalPlayer.Character.HumanoidRootPart, 1)
                        end
                    end
                end
            end
        end
    end
end)

local Section = Game:AddSection({
    Name = "Game:"
})

Game:AddLabel("Marcar o monstro do labirinto.")

local activeEsp = false -- Vari√°vel para controlar o estado do ESP

-- Fun√ß√£o para aplicar o Highlight com base no estado do ESP
local function updateHighlight()
    local bill = game.Workspace.GameplayAssets.Monsters:FindFirstChild("Bill")
    if bill then
        local highlight = bill:FindFirstChild("Highlight")
        if highlight then
            if activeEsp then
                -- Ativar ESP
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Enabled = true
                highlight.FillColor = Color3.fromRGB(123, 0, 0)
                highlight.FillTransparency = 0
                highlight.OutlineColor = Color3.fromRGB(0, 0, 0)
                highlight.OutlineTransparency = 0
            else
                -- Desativar ESP
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.Enabled = true
                highlight.FillColor = Color3.fromRGB(255, 255, 255)
                highlight.FillTransparency = 0.8
                highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                highlight.OutlineTransparency = 1
            end
        else
            -- Se o Bill n√£o tiver Highlight, cria e aplica as configura√ß√µes
            local newHighlight = Instance.new("Highlight")
            newHighlight.Name = "Highlight"
            newHighlight.Parent = bill
            updateHighlight() -- Chama a fun√ß√£o novamente para aplicar as configura√ß√µes corretas
        end
    end
end

-- Fun√ß√£o de Callback do Toggle
Game:AddToggle({
    Name = "Active Esp",
    Default = false,
    Callback = function(Value)
        activeEsp = Value
        updateHighlight()  -- Atualiza o Highlight quando o toggle for acionado
    end    
})

-- Monitorar continuamente o Bill para garantir que o Highlight esteja sempre atualizado
spawn(function()
    while true do
        updateHighlight() -- Checa se o Highlight est√° corretamente configurado
        wait(0.4) -- Verifica a cada 0.4 segundos
    end
end)

-- Fun√ß√µes: < --

local Section = Function:AddSection({
    Name = "Fun√ß√µes:"
})

Function:AddParagraph("Aviso:", "Ap√≥s pressionar o bot√£o 'Come√ßa', a a√ß√£o n√£o poder√° ser desativada e, ao final do tempo, o jogo ser√° encerrado.")

local tempoRestante -- Vari√°vel para armazenar o tempo restante

-- Fun√ß√£o para adicionar o Textbox
Function:AddTextbox({
    Name = "Por favor, insira a quantidade de segundos que voc√™ deseja.",
    Default = "entrada padr√£o",
    TextDisappear = false,
    Callback = function(Value)
        -- Garantir que o valor inserido √© um n√∫mero v√°lido
        tempoRestante = tonumber(Value)
        if tempoRestante == nil or tempoRestante <= 0 then
            print("Valor inv√°lido!")
            return
        end
    end  
})

-- Fun√ß√£o para adicionar o Button
Function:AddButton({
    Name = "Come√ßa",
    Callback = function()
        if tempoRestante then
            -- Desabilitar o bot√£o ap√≥s ser pressionado
            Function:DisableButton("Come√ßa")
            -- Iniciar o time
            print("Bot√£o pressionado, iniciando o tempo...")
            iniciarContagem()
        end
    end    
})

-- Fun√ß√£o para iniciar a contagem regressiva
local function iniciarContagem()
    -- Criar a tela de contagem regressiva
    local player = game.Players.LocalPlayer
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = player.PlayerGui
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(0, 200, 0, 50)
    textLabel.Position = UDim2.new(0.5, -100, 0.5, -25)
    textLabel.Text = "Faltam " .. tempoRestante .. " segundos"
    textLabel.BackgroundTransparency = 1 -- Fundo transparente
    textLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Cor azul no in√≠cio
    textLabel.TextStrokeTransparency = 0.8 -- Um pouco de borda no texto
    textLabel.Font = Enum.Font.SourceSansBold -- Fonte para destaque
    textLabel.TextSize = 24 -- Tamanho da fonte aumentado
    textLabel.Parent = screenGui

    -- Fun√ß√£o para atualizar o texto e verificar o tempo
    local function atualizarContagem()
        for i = tempoRestante, 1, -1 do
            textLabel.Text = "Faltam " .. i .. " segundos"
            
            -- Alterar a cor do texto conforme o tempo passa
            if i > 10 then
                textLabel.TextColor3 = Color3.fromRGB(0, 0, 255) -- Azul
            else
                textLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Vermelho
            end
            
            wait(1)
        end
        textLabel.Text = "Saindo..."
        textLabel.TextColor3 = Color3.fromRGB(255, 0, 0) -- Vermelho no final
        wait(1)
        game:Shutdown() -- Isso vai fechar o jogo ap√≥s o tempo acabar
    end

    -- Iniciar a contagem
    atualizarContagem()
end  

OrionLib:Init()
