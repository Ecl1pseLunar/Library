-- Biblioteca OrionLib
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/OrionLibKeybind.lua"))()

-- Cria a janela principal
local Window = OrionLib:MakeWindow({
    Name = "Library v0.8",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "SaveConfig"
})

-- Obtém o nome do jogo
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

-- Notificação de boas-vindas
OrionLib:MakeNotification({
    Name = "Welcome",
    Content = "Você está participando do " .. gameName .. ".",
    Image = "rbxassetid://4483345998",
    Time = 5
})

-- Criação das abas
local Tags = Window:MakeTab({
    Name = "Tags",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Universal = Window:MakeTab({
    Name = "Universal",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Seção para as tags
local Section = Tags:AddSection({
    Name = "Tags:"
})

-- Parágrafo de aviso na seção de Tags
Section:AddParagraph("Aviso:", "Atualmente, só temos essas tags que conseguimos obter.")

-- Função para adicionar botões de tag
local function addTagButton(tagName)
    Tags:AddButton({
        Name = tagName,
        Callback = function()
            local args = {
                [1] = "EQUIP_TAG",
                [2] = tagName
            }
            game:GetService("ReplicatedStorage").NetworkEvents.RemoteEvent:FireServer(unpack(args))
        end
    })
end

-- Função para adicionar botões universais
local function addUniButton(name, link)
    Universal:AddButton({
        Name = name,
        Callback = function()
            loadstring(game:HttpGet(link))()
        end
    })
end

-- Adiciona os botões de tags em ordem alfabética
addTagButton("Bully")
addTagButton("Hoarder")
addTagButton("Nerd")
addTagButton("Student")
addTagButton("Survivor")
addTagButton("Thief")
addTagButton("ZombieKiller")



-- Serviços necessários
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

-- Variável de controle do toggle
local toggleActive = false

------------------------------------------------------------------
-- Função para criar o Highlight
------------------------------------------------------------------
local function createHighlight(character)
    if character and not character:FindFirstChild("Highlight") then
        local highlight = Instance.new("Highlight")
        highlight.FillColor = Color3.new(0, 0.666667, 0)
        highlight.OutlineTransparency = 0.4
        highlight.FillTransparency = 0.75
        highlight.Name = "Highlight"
        highlight.OutlineColor = Color3.new(0, 0.666667, 0)
        highlight.Enabled = true
        highlight.Parent = character
    end
end

------------------------------------------------------------------
-- Função para criar o BillboardGui
------------------------------------------------------------------
local function createGui(character)
    local head = character:FindFirstChild("Head")
    if head and not head:FindFirstChild("Painel") then
        local painel = Instance.new("BillboardGui")
        painel.Name = "Painel"
        painel.Parent = head
        painel.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        painel.Active = true
        painel.LightInfluence = 1
        painel.Size = UDim2.new(0, 200, 0, 50)
        painel.StudsOffset = Vector3.new(0, 1.5, 0)
        painel.MaxDistance = 1000

        local nome = Instance.new("TextLabel")
        nome.Name = "Nome"
        nome.Parent = painel
        nome.BackgroundTransparency = 1
        nome.Size = UDim2.new(0, 200, 0, 25)
        nome.Font = Enum.Font.SourceSansBold
        nome.TextColor3 = Color3.new(0, 0, 0)
        nome.TextSize = 25

        local vida = Instance.new("TextLabel")
        vida.Name = "Vida"
        vida.Parent = painel
        vida.BackgroundTransparency = 1
        vida.Size = UDim2.new(0, 200, 0, 25)
        vida.Font = Enum.Font.SourceSansBold
        vida.TextColor3 = Color3.new(0, 0, 0)
        vida.TextSize = 25

        local uiListLayout = Instance.new("UIListLayout")
        uiListLayout.Parent = painel
        uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    end
end

------------------------------------------------------------------
-- Função para remover Highlight e BillboardGui
------------------------------------------------------------------
local function removeElements()
    for _, player in ipairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            -- Remove Highlight
            local highlight = character:FindFirstChild("Highlight")
            if highlight then
                highlight:Destroy()
            end
            -- Remove BillboardGui
            local head = character:FindFirstChild("Head")
            if head then
                local painel = head:FindFirstChild("Painel")
                if painel then
                    painel:Destroy()
                end
            end
        end
    end
end

------------------------------------------------------------------
-- Função para atualizar Highlight e GUI
------------------------------------------------------------------
local function updatePlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        local character = player.Character
        if character then
            createHighlight(character)
            createGui(character)
            local head = character:FindFirstChild("Head")
            if head then
                local painel = head:FindFirstChild("Painel")
                if painel then
                    local nome = painel:FindFirstChild("Nome")
                    local vida = painel:FindFirstChild("Vida")
                    if nome then
                        nome.Text = player.Name
                    end
                    if vida then
                        local humanoid = character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            vida.Text = string.format("%d / %d", humanoid.Health, humanoid.MaxHealth)
                        end
                    end
                end
            end
        end
    end
end

------------------------------------------------------------------
-- Loop para atualização periódica
------------------------------------------------------------------
local function startUpdateLoop()
    while toggleActive do
        updatePlayers()
        wait(10)
    end
end

------------------------------------------------------------------
-- Conexões para eventos de jogadores
------------------------------------------------------------------
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        wait(1) -- Aguarda a "Head" ser criada
        if toggleActive then
            updatePlayers()
        end
    end)
end)

Players.PlayerRemoving:Connect(function()
    if toggleActive then
        updatePlayers()
    end
end)

------------------------------------------------------------------
-- Callback do Toggle
------------------------------------------------------------------
Universal:AddToggle({
    Name = "Active Esp!",
    Default = false,
    Callback = function(Value)
        toggleActive = Value
        if toggleActive then
            updatePlayers()
            spawn(startUpdateLoop)
        else
            removeElements()
        end
    end
})




-- Inicializa a OrionLib
OrionLib:Init()
