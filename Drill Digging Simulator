local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/RScriptz/RobloxScripts/main/OrionLibKeybind.lua')))()
local Window = OrionLib:MakeWindow({Name = "Library v0.4", HidePremium = false, SaveConfig = true, ConfigFolder = "SaveConfig"})

local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name

OrionLib:MakeNotification({
    Name = "Welcome",
    Content = "Você está participando do " .. gameName .. ".",
    Image = "rbxassetid://4483345998",
    Time = 5
})

local Tab = Window:MakeTab({
	Name = "Tab 1",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})

-- Variáveis de controle e parâmetros iniciais
local LoopActive = false
local ToolName = "Neon"
local TimeDelay = 0.4

-- Toggle para ativar/desativar o loop de envio de requisições
Tab:AddToggle({
    Name = "Loop Money!",
    Default = false,
    Callback = function(Value)
        LoopActive = Value
        if LoopActive then
            -- Iniciamos uma nova thread para o loop
            coroutine.wrap(function()
                while LoopActive do
                    local player = game:GetService("Players").LocalPlayer
                    -- Espera pela ferramenta com o nome definido em ToolName
                    local tool = player:WaitForChild(ToolName)
                    
                    local args = { tool }  -- Construindo os argumentos para o remote
                    
                    -- Envia o remote event "GiveCash" com os argumentos
                    game:GetService("ReplicatedStorage"):WaitForChild("GiveCash"):FireServer(unpack(args))
                    
                    wait(TimeDelay)  -- Pausa pelo tempo definido (TimeDelay)
                end
            end)()
        end
    end    
})

-- Textbox para definir o nome da ferramenta (ToolPlayer)
Tab:AddTextbox({
    Name = "Nome",
    Default = "Neon",
    TextDisappear = false,
    Callback = function(Value)
        ToolName = Value or "Neon"
    end      
})

-- Textbox para definir o delay entre os loops (TimeDelay)
Tab:AddTextbox({
    Name = "Delay",
    Default = "0.4",
    TextDisappear = false,
    Callback = function(Value)
        -- Converte o valor para número; se inválido, usa 0.4 como padrão
        TimeDelay = tonumber(Value) or 0.4
    end      
})

OrionLib:Init()

